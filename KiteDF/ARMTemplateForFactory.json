{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "KiteDF"
		},
		"DFtoStorageAcc_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'DFtoStorageAcc'"
		},
		"DFtoStorageAcc_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://kitestorageacc.dfs.core.windows.net/"
		},
		"TriggerRawPipeline_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/3008907c-198b-4250-b519-755bf83bd5c2/resourceGroups/KiteRG/providers/Microsoft.Storage/storageAccounts/kitestorageacc"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/RawTransform')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get File List",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "JSONDataSet",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@variables('LatestFile')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Initial Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Check Latest File",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greaterOrEquals(\n    substring(item().name, 10, 12),\n    substring(variables('LatestFile'), 10, 12)\n)\n",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set Latest Value",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "LatestFile",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Set Initial Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "LatestFile",
							"value": {
								"value": "@activity('Get File List').output.childItems[0].name",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEachFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "JSONDataSet",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@variables('LatestFile')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "JSONSinkDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"LatestFile": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JSONDataSet')]",
				"[concat(variables('factoryId'), '/datasets/JSONSinkDS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JSONDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DFtoStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "Kite Latest Data",
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"status": {
							"type": "string"
						},
						"user": {
							"type": "string"
						},
						"holdings": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"tradingsymbol": {
										"type": "string"
									},
									"exchange": {
										"type": "string"
									},
									"instrument_token": {
										"type": "integer"
									},
									"isin": {
										"type": "string"
									},
									"product": {
										"type": "string"
									},
									"price": {
										"type": "integer"
									},
									"quantity": {
										"type": "integer"
									},
									"used_quantity": {
										"type": "integer"
									},
									"t1_quantity": {
										"type": "integer"
									},
									"realised_quantity": {
										"type": "integer"
									},
									"authorised_quantity": {
										"type": "integer"
									},
									"authorised_date": {
										"type": "string"
									},
									"authorisation": {
										"type": "object"
									},
									"opening_quantity": {
										"type": "integer"
									},
									"short_quantity": {
										"type": "integer"
									},
									"collateral_quantity": {
										"type": "integer"
									},
									"collateral_type": {
										"type": "string"
									},
									"discrepancy": {
										"type": "boolean"
									},
									"average_price": {
										"type": "integer"
									},
									"last_price": {
										"type": "number"
									},
									"close_price": {
										"type": "number"
									},
									"pnl": {
										"type": "number"
									},
									"day_change": {
										"type": "number"
									},
									"day_change_percentage": {
										"type": "number"
									},
									"mtf": {
										"type": "object",
										"properties": {
											"quantity": {
												"type": "integer"
											},
											"used_quantity": {
												"type": "integer"
											},
											"average_price": {
												"type": "integer"
											},
											"value": {
												"type": "integer"
											},
											"initial_margin": {
												"type": "integer"
											}
										}
									}
								}
							}
						},
						"positions": {
							"type": "object",
							"properties": {
								"net": {
									"type": "array"
								},
								"day": {
									"type": "array"
								}
							}
						},
						"quotes": {
							"type": "object"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DFtoStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JSONSinkDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DFtoStorageAcc",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Kite JSON",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DFtoStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RawParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DFtoStorageAcc",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Kite Parquet",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DFtoStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DFtoStorageAcc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DFtoStorageAcc_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('DFtoStorageAcc_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerRawPipeline')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "RawTransform",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/Kite Latest Data/",
					"blobPathEndsWith": ".json",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('TriggerRawPipeline_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/RawTransform')]"
			]
		}
	]
}